import 'package:flutter/services.dart';
import 'package:intl/intl.dart';
import 'package:sunmi_printer_plus/column_maker.dart';
import 'package:sunmi_printer_plus/enums.dart';
import 'package:sunmi_printer_plus/sunmi_printer_plus.dart';
import 'package:sunmi_printer_plus/sunmi_style.dart';
import '../models/reg_data.dart';

class PrinterService {
  Future<void> printReceipt(RegData data, {RegAdditionalInfo? additionalInfo, StayRecord? stayRecord}) async {
    final bool bound = (await SunmiPrinter.bindingPrinter()) ?? false;
    if (!bound) return;

    await SunmiPrinter.initPrinter();
    await SunmiPrinter.setAlignment(SunmiPrintAlign.CENTER);

    // ‡πÄ‡∏ß‡πâ‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏±‡∏ß‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©
    await SunmiPrinter.lineWrap(1);

    // üî∂ ‡∏´‡∏±‡∏ß‡∏™‡∏•‡∏¥‡∏õ: ‡πÅ‡∏¢‡∏Å‡πÄ‡∏õ‡πá‡∏ô 2 ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î
    await SunmiPrinter.printText(
      '‡∏™‡∏ñ‡∏≤‡∏ô‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏ò‡∏£‡∏£‡∏°',
      style: SunmiStyle(
        fontSize: SunmiFontSize.LG,
        bold: true,
        align: SunmiPrintAlign.CENTER,
      ),
    );
    await SunmiPrinter.printText(
      '‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏≥‡πÄ‡∏û‡πá‡∏ç',
      style: SunmiStyle(
        fontSize: SunmiFontSize.LG,
        bold: true,
        align: SunmiPrintAlign.CENTER,
      ),
    );

    // üî∏ ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏≠‡∏ô‡∏∏‡πÇ‡∏°‡∏ó‡∏ô‡∏≤‡∏ö‡∏∏‡∏ç ‚Üí font ‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏•‡πá‡∏Å
    await SunmiPrinter.printText(
      '‡∏Ç‡∏≠‡∏≠‡∏ô‡∏∏‡πÇ‡∏°‡∏ó‡∏ô‡∏≤‡∏ö‡∏∏‡∏ç‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏ò‡∏£‡∏£‡∏°',
      style: SunmiStyle(
        fontSize: SunmiFontSize.SM,
        align: SunmiPrintAlign.CENTER,
      ),
    );

    await SunmiPrinter.line();

    // üî∑ ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (‡πÅ‡∏ó‡∏ô‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß)
    final now = DateTime.now();
    final buddhistYear = now.year + 543;
    final formattedTime =
        '${DateFormat('dd/MM/').format(now)}$buddhistYear - ${DateFormat('HH:mm').format(now)}';

    await SunmiPrinter.printText(
      '‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£: $formattedTime',
      style: SunmiStyle(
        fontSize: SunmiFontSize.SM, // ‡∏•‡∏î‡∏Ç‡∏ô‡∏≤‡∏î font ‡∏à‡∏≤‡∏Å MD ‚Üí SM
        align: SunmiPrintAlign.CENTER,
      ),
    );

    // üî∑ ‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•
    await SunmiPrinter.printText(
      '${data.first} ${data.last}',
      style: SunmiStyle(
        fontSize: SunmiFontSize.MD,
        align: SunmiPrintAlign.CENTER,
      ),
    );

    // üî∑ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏û‡∏±‡∏Å (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    if (stayRecord != null) {
      await SunmiPrinter.lineWrap(1);
      await SunmiPrinter.setAlignment(SunmiPrintAlign.CENTER);
      
      // ‡πÅ‡∏õ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
      final startDateThai = _formatDateThai(stayRecord.startDate);
      final endDateThai = _formatDateThai(stayRecord.endDate);
      
      // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô
      final daysDiff = stayRecord.endDate.difference(stayRecord.startDate).inDays + 1;
      
      if (stayRecord.startDate.day == stayRecord.endDate.day &&
          stayRecord.startDate.month == stayRecord.endDate.month &&
          stayRecord.startDate.year == stayRecord.endDate.year) {
        // ‡∏Å‡∏£‡∏ì‡∏µ‡πÄ‡∏Ç‡πâ‡∏≤‡∏û‡∏±‡∏Å‡∏ß‡∏±‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
        await SunmiPrinter.printText(
          '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏û‡∏±‡∏Å-‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î: $startDateThai',
          style: SunmiStyle(
            fontSize: SunmiFontSize.SM,
            align: SunmiPrintAlign.CENTER,
          ),
        );
      } else {
        // ‡∏Å‡∏£‡∏ì‡∏µ‡πÄ‡∏Ç‡πâ‡∏≤‡∏û‡∏±‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡∏ß‡∏±‡∏ô
        await SunmiPrinter.printText(
          '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏û‡∏±‡∏Å: $startDateThai',
          style: SunmiStyle(
            fontSize: SunmiFontSize.SM,
            align: SunmiPrintAlign.CENTER,
          ),
        );
        await SunmiPrinter.printText(
          '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î: $endDateThai',
          style: SunmiStyle(
            fontSize: SunmiFontSize.SM,
            align: SunmiPrintAlign.CENTER,
          ),
        );
      }
      
      await SunmiPrinter.printText(
        '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏û‡∏±‡∏Å: $daysDiff ‡∏ß‡∏±‡∏ô',
        style: SunmiStyle(
          fontSize: SunmiFontSize.SM,
          bold: true,
          align: SunmiPrintAlign.CENTER,
        ),
      );
    }

    // üî∑ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö
    await SunmiPrinter.lineWrap(1);
    await SunmiPrinter.setAlignment(SunmiPrintAlign.LEFT);
    
    await SunmiPrinter.printText(
      '‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö:',
      style: SunmiStyle(
        fontSize: SunmiFontSize.MD,
        bold: true,
        align: SunmiPrintAlign.LEFT,
      ),
    );
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏à‡∏≤‡∏Å additionalInfo ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    final shirtCount = additionalInfo?.shirtCount ?? 0;
    final pantsCount = additionalInfo?.pantsCount ?? 0;
    final matCount = additionalInfo?.matCount ?? 0;
    final pillowCount = additionalInfo?.pillowCount ?? 0;
    final blanketCount = additionalInfo?.blanketCount ?? 0;
    
    String equipmentList = '';
    if (shirtCount > 0) equipmentList += '‚Ä¢ ‡πÄ‡∏™‡∏∑‡πâ‡∏≠ $shirtCount ‡∏ï‡∏±‡∏ß\n';
    if (pantsCount > 0) equipmentList += '‚Ä¢ ‡∏Å‡∏≤‡∏á‡πÄ‡∏Å‡∏á $pantsCount ‡∏ï‡∏±‡∏ß\n';
    if (matCount > 0) equipmentList += '‚Ä¢ ‡πÄ‡∏™‡∏∑‡πà‡∏≠ $matCount ‡∏ú‡∏∑‡∏ô\n';
    if (pillowCount > 0) equipmentList += '‚Ä¢ ‡∏´‡∏°‡∏≠‡∏ô $pillowCount ‡πÉ‡∏ö\n';
    if (blanketCount > 0) equipmentList += '‚Ä¢ ‡∏ú‡πâ‡∏≤‡∏´‡πà‡∏° $blanketCount ‡∏ú‡∏∑‡∏ô\n';
    
    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÉ‡∏î‡πÄ‡∏•‡∏¢ ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
    if (equipmentList.isEmpty) {
      equipmentList = '‚Ä¢ ‡πÄ‡∏™‡∏∑‡πâ‡∏≠\n‚Ä¢ ‡∏Å‡∏≤‡∏á‡πÄ‡∏Å‡∏á\n‚Ä¢ ‡πÄ‡∏™‡∏∑‡πà‡∏≠\n‚Ä¢ ‡∏´‡∏°‡∏≠‡∏ô\n‚Ä¢ ‡∏ú‡πâ‡∏≤‡∏´‡πà‡∏°';
    } else {
      // ‡∏•‡∏ö \n ‡∏ï‡∏±‡∏ß‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢
      equipmentList = equipmentList.trim();
    }
    
    await SunmiPrinter.printText(
      equipmentList,
      style: SunmiStyle(
        fontSize: SunmiFontSize.SM,
        align: SunmiPrintAlign.LEFT,
      ),
    );
    
    // QR Code
    await SunmiPrinter.lineWrap(1);
    await SunmiPrinter.setAlignment(SunmiPrintAlign.CENTER);
    await SunmiPrinter.printQRCode(
      data.id,
      size: 7,
    );
    
    await SunmiPrinter.lineWrap(2);
    await SunmiPrinter.setAlignment(SunmiPrintAlign.CENTER);

    // üî∑ ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏£‡∏±‡∏ö‡∏ä‡∏∏‡∏î‡∏Ç‡∏≤‡∏ß
    await SunmiPrinter.printText(
      '‡πÇ‡∏õ‡∏£‡∏î‡πÅ‡∏™‡∏î‡∏á QR ‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏ä‡∏∏‡∏î‡∏Ç‡∏≤‡∏ß',
      style: SunmiStyle(
        fontSize: SunmiFontSize.MD,
        bold: true,
        align: SunmiPrintAlign.CENTER,
      ),
    );

    // üîö ‡∏à‡∏ö‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ó‡πâ‡∏≤‡∏¢
    await SunmiPrinter.lineWrap(4);
    await SunmiPrinter.unbindingPrinter();
  }

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
  String _formatDateThai(DateTime date) {
    const List<String> thaiMonths = [
      '‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏°', '‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå', '‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏°', '‡πÄ‡∏°‡∏©‡∏≤‡∏¢‡∏ô', 
      '‡∏û‡∏§‡∏©‡∏†‡∏≤‡∏Ñ‡∏°', '‡∏°‡∏¥‡∏ñ‡∏∏‡∏ô‡∏≤‡∏¢‡∏ô', '‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏°', '‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏°',
      '‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô', '‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°', '‡∏û‡∏§‡∏®‡∏à‡∏¥‡∏Å‡∏≤‡∏¢‡∏ô', '‡∏ò‡∏±‡∏ô‡∏ß‡∏≤‡∏Ñ‡∏°'
    ];
    
    final buddhistYear = date.year + 543;
    final monthName = thaiMonths[date.month - 1];
    
    return '${date.day} $monthName $buddhistYear';
  }
}
