import 'package:flutter/services.dart';
import 'package:intl/intl.dart';
import 'package:sunmi_printer_plus/column_maker.dart';
import 'package:sunmi_printer_plus/enums.dart';
import 'package:sunmi_printer_plus/sunmi_printer_plus.dart';
import 'package:sunmi_printer_plus/sunmi_style.dart';
import '../models/reg_data.dart';

class PrinterService {
  Future<void> printReceipt(RegData data) async {
    final bool bound = (await SunmiPrinter.bindingPrinter()) ?? false;
    if (!bound) return;

    await SunmiPrinter.initPrinter();
    await SunmiPrinter.setAlignment(SunmiPrintAlign.CENTER);

    // ‡πÄ‡∏ß‡πâ‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏±‡∏ß‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©
    await SunmiPrinter.lineWrap(1);

    // üî∂ ‡∏´‡∏±‡∏ß‡∏™‡∏•‡∏¥‡∏õ: ‡πÅ‡∏¢‡∏Å‡πÄ‡∏õ‡πá‡∏ô 2 ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î
    await SunmiPrinter.printText(
      '‡∏™‡∏ñ‡∏≤‡∏ô‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏ò‡∏£‡∏£‡∏°',
      style: SunmiStyle(
        fontSize: SunmiFontSize.LG,
        bold: true,
        align: SunmiPrintAlign.CENTER,
      ),
    );
    await SunmiPrinter.printText(
      '‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏≥‡πÄ‡∏û‡πá‡∏ç',
      style: SunmiStyle(
        fontSize: SunmiFontSize.LG,
        bold: true,
        align: SunmiPrintAlign.CENTER,
      ),
    );

    // üî∏ ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏≠‡∏ô‡∏∏‡πÇ‡∏°‡∏ó‡∏ô‡∏≤‡∏ö‡∏∏‡∏ç ‚Üí font ‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏•‡πá‡∏Å
    await SunmiPrinter.printText(
      '‡∏Ç‡∏≠‡∏≠‡∏ô‡∏∏‡πÇ‡∏°‡∏ó‡∏ô‡∏≤‡∏ö‡∏∏‡∏ç‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏ò‡∏£‡∏£‡∏°',
      style: SunmiStyle(
        fontSize: SunmiFontSize.SM,
        align: SunmiPrintAlign.CENTER,
      ),
    );

    await SunmiPrinter.line();

    // üî∑ ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (‡πÅ‡∏ó‡∏ô‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß)
    final now = DateTime.now();
    final buddhistYear = now.year + 543;
    final formattedTime =
        '${DateFormat('dd/MM/').format(now)}$buddhistYear - ${DateFormat('HH:mm').format(now)}';

    await SunmiPrinter.printText(
      '‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£: $formattedTime',
      style: SunmiStyle(
        fontSize: SunmiFontSize.SM, // ‡∏•‡∏î‡∏Ç‡∏ô‡∏≤‡∏î font ‡∏à‡∏≤‡∏Å MD ‚Üí SM
        align: SunmiPrintAlign.CENTER,
      ),
    );

    // üî∑ ‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•
    await SunmiPrinter.printText(
      '${data.first} ${data.last}',
      style: SunmiStyle(
        fontSize: SunmiFontSize.MD,
        align: SunmiPrintAlign.CENTER,
      ),
    );

    // üî∑ QR Code (‡πÉ‡∏ä‡πâ ID)
    await SunmiPrinter.lineWrap(1);
    await SunmiPrinter.printQRCode(
      data.id,
      size: 8,
    );
    await SunmiPrinter.lineWrap(1);

    // üî∑ ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏£‡∏±‡∏ö‡∏ä‡∏∏‡∏î‡∏Ç‡∏≤‡∏ß
    await SunmiPrinter.printText(
      '‡πÇ‡∏õ‡∏£‡∏î‡πÅ‡∏™‡∏î‡∏á QR ‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏ä‡∏∏‡∏î‡∏Ç‡∏≤‡∏ß',
      style: SunmiStyle(
        fontSize: SunmiFontSize.MD,
        bold: true,
        align: SunmiPrintAlign.CENTER,
      ),
    );

    // üîö ‡∏à‡∏ö‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ó‡πâ‡∏≤‡∏¢
    await SunmiPrinter.lineWrap(4);
    await SunmiPrinter.unbindingPrinter();
  }
}
