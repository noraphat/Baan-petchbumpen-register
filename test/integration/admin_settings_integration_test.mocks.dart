// Mocks generated by Mockito 5.4.6 from annotations
// in flutter_petchbumpen_register/test/integration/admin_settings_integration_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:flutter_petchbumpen_register/models/backup_info.dart' as _i7;
import 'package:flutter_petchbumpen_register/models/backup_settings.dart'
    as _i2;
import 'package:flutter_petchbumpen_register/models/reg_data.dart' as _i9;
import 'package:flutter_petchbumpen_register/models/room_model.dart' as _i10;
import 'package:flutter_petchbumpen_register/services/backup_service.dart'
    as _i4;
import 'package:flutter_petchbumpen_register/services/db_helper.dart' as _i8;
import 'package:flutter_petchbumpen_register/services/menu_settings_service.dart'
    as _i11;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:sqflite/sqflite.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBackupSettings_0 extends _i1.SmartFake
    implements _i2.BackupSettings {
  _FakeBackupSettings_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDatabase_1 extends _i1.SmartFake implements _i3.Database {
  _FakeDatabase_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [BackupService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBackupService extends _i1.Mock implements _i4.BackupService {
  MockBackupService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Stream<String> get progressStream =>
      (super.noSuchMethod(
            Invocation.getter(#progressStream),
            returnValue: _i5.Stream<String>.empty(),
          )
          as _i5.Stream<String>);

  @override
  _i5.Stream<double> get progressPercentStream =>
      (super.noSuchMethod(
            Invocation.getter(#progressPercentStream),
            returnValue: _i5.Stream<double>.empty(),
          )
          as _i5.Stream<double>);

  @override
  _i5.Future<String> exportToJson() =>
      (super.noSuchMethod(
            Invocation.method(#exportToJson, []),
            returnValue: _i5.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#exportToJson, []),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<String> exportToSql() =>
      (super.noSuchMethod(
            Invocation.method(#exportToSql, []),
            returnValue: _i5.Future<String>.value(
              _i6.dummyValue<String>(this, Invocation.method(#exportToSql, [])),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<void> enableAutoBackup() =>
      (super.noSuchMethod(
            Invocation.method(#enableAutoBackup, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> disableAutoBackup() =>
      (super.noSuchMethod(
            Invocation.method(#disableAutoBackup, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> performDailyBackup() =>
      (super.noSuchMethod(
            Invocation.method(#performDailyBackup, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  bool isAutoBackupEnabled() =>
      (super.noSuchMethod(
            Invocation.method(#isAutoBackupEnabled, []),
            returnValue: false,
          )
          as bool);

  @override
  _i5.Future<void> restoreFromFile(String? filePath) =>
      (super.noSuchMethod(
            Invocation.method(#restoreFromFile, [filePath]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> cleanOldBackups() =>
      (super.noSuchMethod(
            Invocation.method(#cleanOldBackups, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i7.BackupInfo>> getBackupFiles() =>
      (super.noSuchMethod(
            Invocation.method(#getBackupFiles, []),
            returnValue: _i5.Future<List<_i7.BackupInfo>>.value(
              <_i7.BackupInfo>[],
            ),
          )
          as _i5.Future<List<_i7.BackupInfo>>);

  @override
  _i5.Future<void> saveBackupSettings(_i2.BackupSettings? settings) =>
      (super.noSuchMethod(
            Invocation.method(#saveBackupSettings, [settings]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i2.BackupSettings> getBackupSettings() =>
      (super.noSuchMethod(
            Invocation.method(#getBackupSettings, []),
            returnValue: _i5.Future<_i2.BackupSettings>.value(
              _FakeBackupSettings_0(
                this,
                Invocation.method(#getBackupSettings, []),
              ),
            ),
          )
          as _i5.Future<_i2.BackupSettings>);

  @override
  _i5.Future<bool> validateBackupFile(String? filePath) =>
      (super.noSuchMethod(
            Invocation.method(#validateBackupFile, [filePath]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<String> getBackupDirectory() =>
      (super.noSuchMethod(
            Invocation.method(#getBackupDirectory, []),
            returnValue: _i5.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#getBackupDirectory, []),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<int> getAvailableStorageSpace() =>
      (super.noSuchMethod(
            Invocation.method(#getAvailableStorageSpace, []),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<void> deleteBackupFile(String? fileName) =>
      (super.noSuchMethod(
            Invocation.method(#deleteBackupFile, [fileName]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [DbHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDbHelper extends _i1.Mock implements _i8.DbHelper {
  MockDbHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.Database> get db =>
      (super.noSuchMethod(
            Invocation.getter(#db),
            returnValue: _i5.Future<_i3.Database>.value(
              _FakeDatabase_1(this, Invocation.getter(#db)),
            ),
          )
          as _i5.Future<_i3.Database>);

  @override
  _i5.Future<_i9.RegData?> fetchById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#fetchById, [id]),
            returnValue: _i5.Future<_i9.RegData?>.value(),
          )
          as _i5.Future<_i9.RegData?>);

  @override
  _i5.Future<void> insert(_i9.RegData? data) =>
      (super.noSuchMethod(
            Invocation.method(#insert, [data]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> update(_i9.RegData? data) =>
      (super.noSuchMethod(
            Invocation.method(#update, [data]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i9.RegData>> fetchAll() =>
      (super.noSuchMethod(
            Invocation.method(#fetchAll, []),
            returnValue: _i5.Future<List<_i9.RegData>>.value(<_i9.RegData>[]),
          )
          as _i5.Future<List<_i9.RegData>>);

  @override
  _i5.Future<List<_i9.RegData>> fetchByIdCard(bool? hasIdCard) =>
      (super.noSuchMethod(
            Invocation.method(#fetchByIdCard, [hasIdCard]),
            returnValue: _i5.Future<List<_i9.RegData>>.value(<_i9.RegData>[]),
          )
          as _i5.Future<List<_i9.RegData>>);

  @override
  _i5.Future<void> delete(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [id]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> hardDelete(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#hardDelete, [id]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<String>> getAvailableGenders() =>
      (super.noSuchMethod(
            Invocation.method(#getAvailableGenders, []),
            returnValue: _i5.Future<List<String>>.value(<String>[]),
          )
          as _i5.Future<List<String>>);

  @override
  _i5.Future<List<_i9.RegData>> fetchDeletedRecords() =>
      (super.noSuchMethod(
            Invocation.method(#fetchDeletedRecords, []),
            returnValue: _i5.Future<List<_i9.RegData>>.value(<_i9.RegData>[]),
          )
          as _i5.Future<List<_i9.RegData>>);

  @override
  _i5.Future<void> restoreRecord(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#restoreRecord, [id]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> updateExpiredStays() =>
      (super.noSuchMethod(
            Invocation.method(#updateExpiredStays, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i9.RegAdditionalInfo?> fetchAdditionalInfo(String? regId) =>
      (super.noSuchMethod(
            Invocation.method(#fetchAdditionalInfo, [regId]),
            returnValue: _i5.Future<_i9.RegAdditionalInfo?>.value(),
          )
          as _i5.Future<_i9.RegAdditionalInfo?>);

  @override
  _i5.Future<_i9.RegAdditionalInfo?> fetchAdditionalInfoByRegId(
    String? regId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#fetchAdditionalInfoByRegId, [regId]),
            returnValue: _i5.Future<_i9.RegAdditionalInfo?>.value(),
          )
          as _i5.Future<_i9.RegAdditionalInfo?>);

  @override
  _i5.Future<_i9.RegAdditionalInfo?> fetchAdditionalInfoByVisitId(
    String? visitId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#fetchAdditionalInfoByVisitId, [visitId]),
            returnValue: _i5.Future<_i9.RegAdditionalInfo?>.value(),
          )
          as _i5.Future<_i9.RegAdditionalInfo?>);

  @override
  _i5.Future<List<_i9.RegAdditionalInfo>> fetchAllAdditionalInfoByRegId(
    String? regId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#fetchAllAdditionalInfoByRegId, [regId]),
            returnValue: _i5.Future<List<_i9.RegAdditionalInfo>>.value(
              <_i9.RegAdditionalInfo>[],
            ),
          )
          as _i5.Future<List<_i9.RegAdditionalInfo>>);

  @override
  _i5.Future<void> insertAdditionalInfo(_i9.RegAdditionalInfo? data) =>
      (super.noSuchMethod(
            Invocation.method(#insertAdditionalInfo, [data]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> updateAdditionalInfo(_i9.RegAdditionalInfo? data) =>
      (super.noSuchMethod(
            Invocation.method(#updateAdditionalInfo, [data]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deleteAdditionalInfo(String? regId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteAdditionalInfo, [regId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<Map<String, dynamic>?> fetchCompleteData(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#fetchCompleteData, [id]),
            returnValue: _i5.Future<Map<String, dynamic>?>.value(),
          )
          as _i5.Future<Map<String, dynamic>?>);

  @override
  _i5.Future<void> updateEditableFields(String? id, {String? phone}) =>
      (super.noSuchMethod(
            Invocation.method(#updateEditableFields, [id], {#phone: phone}),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> updateAllFields(_i9.RegData? data) =>
      (super.noSuchMethod(
            Invocation.method(#updateAllFields, [data]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> updateAdditionalInfoFields(
    String? regId,
    _i9.RegAdditionalInfo? additionalInfo,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateAdditionalInfoFields, [
              regId,
              additionalInfo,
            ]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> createTestData() =>
      (super.noSuchMethod(
            Invocation.method(#createTestData, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> debugPrintAllData() =>
      (super.noSuchMethod(
            Invocation.method(#debugPrintAllData, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i9.StayRecord?> fetchLatestStay(String? visitorId) =>
      (super.noSuchMethod(
            Invocation.method(#fetchLatestStay, [visitorId]),
            returnValue: _i5.Future<_i9.StayRecord?>.value(),
          )
          as _i5.Future<_i9.StayRecord?>);

  @override
  _i5.Future<List<_i9.StayRecord>> fetchAllStays(String? visitorId) =>
      (super.noSuchMethod(
            Invocation.method(#fetchAllStays, [visitorId]),
            returnValue: _i5.Future<List<_i9.StayRecord>>.value(
              <_i9.StayRecord>[],
            ),
          )
          as _i5.Future<List<_i9.StayRecord>>);

  @override
  _i5.Future<List<_i9.StayRecord>> fetchActiveStays(String? visitorId) =>
      (super.noSuchMethod(
            Invocation.method(#fetchActiveStays, [visitorId]),
            returnValue: _i5.Future<List<_i9.StayRecord>>.value(
              <_i9.StayRecord>[],
            ),
          )
          as _i5.Future<List<_i9.StayRecord>>);

  @override
  _i5.Future<int> insertStay(_i9.StayRecord? stay) =>
      (super.noSuchMethod(
            Invocation.method(#insertStay, [stay]),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<void> updateStay(_i9.StayRecord? stay) =>
      (super.noSuchMethod(
            Invocation.method(#updateStay, [stay]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deleteStay(int? stayId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteStay, [stayId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<Map<String, dynamic>> checkStayStatus(String? visitorId) =>
      (super.noSuchMethod(
            Invocation.method(#checkStayStatus, [visitorId]),
            returnValue: _i5.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<void> completeStay(int? stayId) =>
      (super.noSuchMethod(
            Invocation.method(#completeStay, [stayId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<bool> hasOverlappingStay(
    String? visitorId,
    DateTime? startDate,
    DateTime? endDate, {
    int? excludeStayId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #hasOverlappingStay,
              [visitorId, startDate, endDate],
              {#excludeStayId: excludeStayId},
            ),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<Map<String, int>> getDatabaseStatistics() =>
      (super.noSuchMethod(
            Invocation.method(#getDatabaseStatistics, []),
            returnValue: _i5.Future<Map<String, int>>.value(<String, int>{}),
          )
          as _i5.Future<Map<String, int>>);

  @override
  _i5.Future<int> clearTestData() =>
      (super.noSuchMethod(
            Invocation.method(#clearTestData, []),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<void> createMultipleTestData() =>
      (super.noSuchMethod(
            Invocation.method(#createMultipleTestData, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> clearAllData() =>
      (super.noSuchMethod(
            Invocation.method(#clearAllData, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<String?> getSetting(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#getSetting, [key]),
            returnValue: _i5.Future<String?>.value(),
          )
          as _i5.Future<String?>);

  @override
  _i5.Future<void> setSetting(String? key, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#setSetting, [key, value]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<bool> getBoolSetting(String? key, {bool? defaultValue = false}) =>
      (super.noSuchMethod(
            Invocation.method(
              #getBoolSetting,
              [key],
              {#defaultValue: defaultValue},
            ),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<void> setBoolSetting(String? key, bool? value) =>
      (super.noSuchMethod(
            Invocation.method(#setBoolSetting, [key, value]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<Map<String, bool>> getAllMenuSettings() =>
      (super.noSuchMethod(
            Invocation.method(#getAllMenuSettings, []),
            returnValue: _i5.Future<Map<String, bool>>.value(<String, bool>{}),
          )
          as _i5.Future<Map<String, bool>>);

  @override
  _i5.Future<List<_i10.MapData>> fetchAllMaps() =>
      (super.noSuchMethod(
            Invocation.method(#fetchAllMaps, []),
            returnValue: _i5.Future<List<_i10.MapData>>.value(<_i10.MapData>[]),
          )
          as _i5.Future<List<_i10.MapData>>);

  @override
  _i5.Future<_i10.MapData?> fetchActiveMap() =>
      (super.noSuchMethod(
            Invocation.method(#fetchActiveMap, []),
            returnValue: _i5.Future<_i10.MapData?>.value(),
          )
          as _i5.Future<_i10.MapData?>);

  @override
  _i5.Future<int> insertMap(_i10.MapData? mapData) =>
      (super.noSuchMethod(
            Invocation.method(#insertMap, [mapData]),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<void> updateMap(_i10.MapData? mapData) =>
      (super.noSuchMethod(
            Invocation.method(#updateMap, [mapData]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deleteMap(int? mapId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteMap, [mapId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> setActiveMap(int? mapId) =>
      (super.noSuchMethod(
            Invocation.method(#setActiveMap, [mapId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i10.Room>> fetchAllRooms() =>
      (super.noSuchMethod(
            Invocation.method(#fetchAllRooms, []),
            returnValue: _i5.Future<List<_i10.Room>>.value(<_i10.Room>[]),
          )
          as _i5.Future<List<_i10.Room>>);

  @override
  _i5.Future<_i10.Room?> fetchRoomById(int? roomId) =>
      (super.noSuchMethod(
            Invocation.method(#fetchRoomById, [roomId]),
            returnValue: _i5.Future<_i10.Room?>.value(),
          )
          as _i5.Future<_i10.Room?>);

  @override
  _i5.Future<List<_i10.Room>> fetchRoomsWithPosition() =>
      (super.noSuchMethod(
            Invocation.method(#fetchRoomsWithPosition, []),
            returnValue: _i5.Future<List<_i10.Room>>.value(<_i10.Room>[]),
          )
          as _i5.Future<List<_i10.Room>>);

  @override
  _i5.Future<List<_i10.Room>> fetchRoomsByStatus(_i10.RoomStatus? status) =>
      (super.noSuchMethod(
            Invocation.method(#fetchRoomsByStatus, [status]),
            returnValue: _i5.Future<List<_i10.Room>>.value(<_i10.Room>[]),
          )
          as _i5.Future<List<_i10.Room>>);

  @override
  _i5.Future<int> insertRoom(_i10.Room? room) =>
      (super.noSuchMethod(
            Invocation.method(#insertRoom, [room]),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<void> updateRoom(_i10.Room? room) =>
      (super.noSuchMethod(
            Invocation.method(#updateRoom, [room]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deleteRoom(int? roomId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteRoom, [roomId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> updateRoomPosition(int? roomId, double? x, double? y) =>
      (super.noSuchMethod(
            Invocation.method(#updateRoomPosition, [roomId, x, y]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> updateRoomStatus(
    int? roomId,
    _i10.RoomStatus? status, {
    String? occupantId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #updateRoomStatus,
              [roomId, status],
              {#occupantId: occupantId},
            ),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<bool> isPositionOccupied(
    double? x,
    double? y, {
    int? excludeRoomId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #isPositionOccupied,
              [x, y],
              {#excludeRoomId: excludeRoomId},
            ),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<void> createTestRooms() =>
      (super.noSuchMethod(
            Invocation.method(#createTestRooms, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> clearMapAndRoomData() =>
      (super.noSuchMethod(
            Invocation.method(#clearMapAndRoomData, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i10.RoomBooking>> fetchAllBookings() =>
      (super.noSuchMethod(
            Invocation.method(#fetchAllBookings, []),
            returnValue: _i5.Future<List<_i10.RoomBooking>>.value(
              <_i10.RoomBooking>[],
            ),
          )
          as _i5.Future<List<_i10.RoomBooking>>);

  @override
  _i5.Future<List<_i10.RoomBooking>> fetchBookingsByRoom(int? roomId) =>
      (super.noSuchMethod(
            Invocation.method(#fetchBookingsByRoom, [roomId]),
            returnValue: _i5.Future<List<_i10.RoomBooking>>.value(
              <_i10.RoomBooking>[],
            ),
          )
          as _i5.Future<List<_i10.RoomBooking>>);

  @override
  _i5.Future<int> insertBooking(_i10.RoomBooking? booking) =>
      (super.noSuchMethod(
            Invocation.method(#insertBooking, [booking]),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<void> updateBooking(_i10.RoomBooking? booking) =>
      (super.noSuchMethod(
            Invocation.method(#updateBooking, [booking]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deleteBooking(int? bookingId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteBooking, [bookingId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}

/// A class which mocks [MenuSettingsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMenuSettingsService extends _i1.Mock
    implements _i11.MenuSettingsService {
  MockMenuSettingsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<bool> get isWhiteRobeEnabled =>
      (super.noSuchMethod(
            Invocation.getter(#isWhiteRobeEnabled),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<bool> get isBookingEnabled =>
      (super.noSuchMethod(
            Invocation.getter(#isBookingEnabled),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<bool> get isScheduleEnabled =>
      (super.noSuchMethod(
            Invocation.getter(#isScheduleEnabled),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<bool> get isSummaryEnabled =>
      (super.noSuchMethod(
            Invocation.getter(#isSummaryEnabled),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<bool> get isDebugRoomMenuEnabled =>
      (super.noSuchMethod(
            Invocation.getter(#isDebugRoomMenuEnabled),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<void> setWhiteRobeEnabled(bool? enabled) =>
      (super.noSuchMethod(
            Invocation.method(#setWhiteRobeEnabled, [enabled]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> setBookingEnabled(bool? enabled) =>
      (super.noSuchMethod(
            Invocation.method(#setBookingEnabled, [enabled]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> setScheduleEnabled(bool? enabled) =>
      (super.noSuchMethod(
            Invocation.method(#setScheduleEnabled, [enabled]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> setSummaryEnabled(bool? enabled) =>
      (super.noSuchMethod(
            Invocation.method(#setSummaryEnabled, [enabled]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> setDebugRoomMenuEnabled(bool? enabled) =>
      (super.noSuchMethod(
            Invocation.method(#setDebugRoomMenuEnabled, [enabled]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<Map<String, bool>> getAllMenuSettings() =>
      (super.noSuchMethod(
            Invocation.method(#getAllMenuSettings, []),
            returnValue: _i5.Future<Map<String, bool>>.value(<String, bool>{}),
          )
          as _i5.Future<Map<String, bool>>);

  @override
  _i5.Future<void> resetToDefaults() =>
      (super.noSuchMethod(
            Invocation.method(#resetToDefaults, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}
