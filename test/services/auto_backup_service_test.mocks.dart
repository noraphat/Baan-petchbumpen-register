// Mocks generated by Mockito 5.4.6 from annotations
// in flutter_petchbumpen_register/test/services/auto_backup_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:flutter_petchbumpen_register/services/file_management_service.dart'
    as _i5;
import 'package:flutter_petchbumpen_register/services/sql_export_service.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDuration_0 extends _i1.SmartFake implements Duration {
  _FakeDuration_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [SqlExportService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSqlExportService extends _i1.Mock implements _i2.SqlExportService {
  MockSqlExportService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String> exportToSql() =>
      (super.noSuchMethod(
            Invocation.method(#exportToSql, []),
            returnValue: _i3.Future<String>.value(
              _i4.dummyValue<String>(this, Invocation.method(#exportToSql, [])),
            ),
          )
          as _i3.Future<String>);

  @override
  _i3.Future<String> saveSqlToFile(String? sqlContent, String? fileName) =>
      (super.noSuchMethod(
            Invocation.method(#saveSqlToFile, [sqlContent, fileName]),
            returnValue: _i3.Future<String>.value(
              _i4.dummyValue<String>(
                this,
                Invocation.method(#saveSqlToFile, [sqlContent, fileName]),
              ),
            ),
          )
          as _i3.Future<String>);

  @override
  String generateDailyBackupFileName() =>
      (super.noSuchMethod(
            Invocation.method(#generateDailyBackupFileName, []),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.method(#generateDailyBackupFileName, []),
            ),
          )
          as String);

  @override
  String generateTimestampedFileName() =>
      (super.noSuchMethod(
            Invocation.method(#generateTimestampedFileName, []),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.method(#generateTimestampedFileName, []),
            ),
          )
          as String);

  @override
  _i3.Future<String> exportDailyBackup() =>
      (super.noSuchMethod(
            Invocation.method(#exportDailyBackup, []),
            returnValue: _i3.Future<String>.value(
              _i4.dummyValue<String>(
                this,
                Invocation.method(#exportDailyBackup, []),
              ),
            ),
          )
          as _i3.Future<String>);

  @override
  _i3.Future<String> exportTimestampedBackup() =>
      (super.noSuchMethod(
            Invocation.method(#exportTimestampedBackup, []),
            returnValue: _i3.Future<String>.value(
              _i4.dummyValue<String>(
                this,
                Invocation.method(#exportTimestampedBackup, []),
              ),
            ),
          )
          as _i3.Future<String>);
}

/// A class which mocks [FileManagementService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFileManagementService extends _i1.Mock
    implements _i5.FileManagementService {
  MockFileManagementService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String> getBackupDirectory() =>
      (super.noSuchMethod(
            Invocation.method(#getBackupDirectory, []),
            returnValue: _i3.Future<String>.value(
              _i4.dummyValue<String>(
                this,
                Invocation.method(#getBackupDirectory, []),
              ),
            ),
          )
          as _i3.Future<String>);

  @override
  _i3.Future<void> ensureBackupDirectoryExists() =>
      (super.noSuchMethod(
            Invocation.method(#ensureBackupDirectoryExists, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<String>> getBackupFiles() =>
      (super.noSuchMethod(
            Invocation.method(#getBackupFiles, []),
            returnValue: _i3.Future<List<String>>.value(<String>[]),
          )
          as _i3.Future<List<String>>);

  @override
  _i3.Future<void> deleteOldBackups({int? maxDays = 31}) =>
      (super.noSuchMethod(
            Invocation.method(#deleteOldBackups, [], {#maxDays: maxDays}),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<bool> hasWritePermission() =>
      (super.noSuchMethod(
            Invocation.method(#hasWritePermission, []),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<void> requestWritePermission() =>
      (super.noSuchMethod(
            Invocation.method(#requestWritePermission, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<int> getAvailableStorageSpace() =>
      (super.noSuchMethod(
            Invocation.method(#getAvailableStorageSpace, []),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i3.Future<String> createBackupFile(String? fileName, String? content) =>
      (super.noSuchMethod(
            Invocation.method(#createBackupFile, [fileName, content]),
            returnValue: _i3.Future<String>.value(
              _i4.dummyValue<String>(
                this,
                Invocation.method(#createBackupFile, [fileName, content]),
              ),
            ),
          )
          as _i3.Future<String>);

  @override
  _i3.Future<bool> backupFileExists(String? fileName) =>
      (super.noSuchMethod(
            Invocation.method(#backupFileExists, [fileName]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<int> getBackupFileSize(String? fileName) =>
      (super.noSuchMethod(
            Invocation.method(#getBackupFileSize, [fileName]),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i3.Future<void> deleteBackupFile(String? fileName) =>
      (super.noSuchMethod(
            Invocation.method(#deleteBackupFile, [fileName]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<bool> isExternalStorageAvailable() =>
      (super.noSuchMethod(
            Invocation.method(#isExternalStorageAvailable, []),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<String?> getShareableDirectory() =>
      (super.noSuchMethod(
            Invocation.method(#getShareableDirectory, []),
            returnValue: _i3.Future<String?>.value(),
          )
          as _i3.Future<String?>);

  @override
  List<String> getSupportedBackupExtensions() =>
      (super.noSuchMethod(
            Invocation.method(#getSupportedBackupExtensions, []),
            returnValue: <String>[],
          )
          as List<String>);

  @override
  int getMaxBackupFileSize() =>
      (super.noSuchMethod(
            Invocation.method(#getMaxBackupFileSize, []),
            returnValue: 0,
          )
          as int);

  @override
  bool supportsBackgroundBackup() =>
      (super.noSuchMethod(
            Invocation.method(#supportsBackgroundBackup, []),
            returnValue: false,
          )
          as bool);

  @override
  Duration getRecommendedBackupFrequency() =>
      (super.noSuchMethod(
            Invocation.method(#getRecommendedBackupFrequency, []),
            returnValue: _FakeDuration_0(
              this,
              Invocation.method(#getRecommendedBackupFrequency, []),
            ),
          )
          as Duration);

  @override
  _i3.Future<String?> copyBackupToShareableLocation(String? fileName) =>
      (super.noSuchMethod(
            Invocation.method(#copyBackupToShareableLocation, [fileName]),
            returnValue: _i3.Future<String?>.value(),
          )
          as _i3.Future<String?>);

  @override
  _i3.Future<bool> isBackupFileSizeValid(String? fileName) =>
      (super.noSuchMethod(
            Invocation.method(#isBackupFileSizeValid, [fileName]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);
}
