// Mocks generated by Mockito 5.4.6 from annotations
// in flutter_petchbumpen_register/test/widgets/auto_backup_toggle_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:flutter_petchbumpen_register/models/backup_info.dart' as _i8;
import 'package:flutter_petchbumpen_register/models/backup_settings.dart'
    as _i4;
import 'package:flutter_petchbumpen_register/services/backup_logger.dart'
    as _i2;
import 'package:flutter_petchbumpen_register/services/backup_notification_service.dart'
    as _i3;
import 'package:flutter_petchbumpen_register/services/backup_service.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBackupLogger_0 extends _i1.SmartFake implements _i2.BackupLogger {
  _FakeBackupLogger_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeBackupNotificationService_1 extends _i1.SmartFake
    implements _i3.BackupNotificationService {
  _FakeBackupNotificationService_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeBackupSettings_2 extends _i1.SmartFake
    implements _i4.BackupSettings {
  _FakeBackupSettings_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [BackupService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBackupService extends _i1.Mock implements _i5.BackupService {
  @override
  _i6.Stream<String> get progressStream =>
      (super.noSuchMethod(
            Invocation.getter(#progressStream),
            returnValue: _i6.Stream<String>.empty(),
            returnValueForMissingStub: _i6.Stream<String>.empty(),
          )
          as _i6.Stream<String>);

  @override
  _i6.Stream<double> get progressPercentStream =>
      (super.noSuchMethod(
            Invocation.getter(#progressPercentStream),
            returnValue: _i6.Stream<double>.empty(),
            returnValueForMissingStub: _i6.Stream<double>.empty(),
          )
          as _i6.Stream<double>);

  @override
  _i2.BackupLogger get logger =>
      (super.noSuchMethod(
            Invocation.getter(#logger),
            returnValue: _FakeBackupLogger_0(this, Invocation.getter(#logger)),
            returnValueForMissingStub: _FakeBackupLogger_0(
              this,
              Invocation.getter(#logger),
            ),
          )
          as _i2.BackupLogger);

  @override
  _i3.BackupNotificationService get notificationService =>
      (super.noSuchMethod(
            Invocation.getter(#notificationService),
            returnValue: _FakeBackupNotificationService_1(
              this,
              Invocation.getter(#notificationService),
            ),
            returnValueForMissingStub: _FakeBackupNotificationService_1(
              this,
              Invocation.getter(#notificationService),
            ),
          )
          as _i3.BackupNotificationService);

  @override
  _i6.Future<String> exportToJson() =>
      (super.noSuchMethod(
            Invocation.method(#exportToJson, []),
            returnValue: _i6.Future<String>.value(
              _i7.dummyValue<String>(
                this,
                Invocation.method(#exportToJson, []),
              ),
            ),
            returnValueForMissingStub: _i6.Future<String>.value(
              _i7.dummyValue<String>(
                this,
                Invocation.method(#exportToJson, []),
              ),
            ),
          )
          as _i6.Future<String>);

  @override
  _i6.Future<String> exportToSql() =>
      (super.noSuchMethod(
            Invocation.method(#exportToSql, []),
            returnValue: _i6.Future<String>.value(
              _i7.dummyValue<String>(this, Invocation.method(#exportToSql, [])),
            ),
            returnValueForMissingStub: _i6.Future<String>.value(
              _i7.dummyValue<String>(this, Invocation.method(#exportToSql, [])),
            ),
          )
          as _i6.Future<String>);

  @override
  _i6.Future<void> enableAutoBackup() =>
      (super.noSuchMethod(
            Invocation.method(#enableAutoBackup, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> disableAutoBackup() =>
      (super.noSuchMethod(
            Invocation.method(#disableAutoBackup, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> performDailyBackup() =>
      (super.noSuchMethod(
            Invocation.method(#performDailyBackup, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  bool isAutoBackupEnabled() =>
      (super.noSuchMethod(
            Invocation.method(#isAutoBackupEnabled, []),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  _i6.Future<void> restoreFromFile(String? filePath) =>
      (super.noSuchMethod(
            Invocation.method(#restoreFromFile, [filePath]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> cleanOldBackups() =>
      (super.noSuchMethod(
            Invocation.method(#cleanOldBackups, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<List<_i8.BackupInfo>> getBackupFiles() =>
      (super.noSuchMethod(
            Invocation.method(#getBackupFiles, []),
            returnValue: _i6.Future<List<_i8.BackupInfo>>.value(
              <_i8.BackupInfo>[],
            ),
            returnValueForMissingStub: _i6.Future<List<_i8.BackupInfo>>.value(
              <_i8.BackupInfo>[],
            ),
          )
          as _i6.Future<List<_i8.BackupInfo>>);

  @override
  _i6.Future<void> saveBackupSettings(_i4.BackupSettings? settings) =>
      (super.noSuchMethod(
            Invocation.method(#saveBackupSettings, [settings]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<_i4.BackupSettings> getBackupSettings() =>
      (super.noSuchMethod(
            Invocation.method(#getBackupSettings, []),
            returnValue: _i6.Future<_i4.BackupSettings>.value(
              _FakeBackupSettings_2(
                this,
                Invocation.method(#getBackupSettings, []),
              ),
            ),
            returnValueForMissingStub: _i6.Future<_i4.BackupSettings>.value(
              _FakeBackupSettings_2(
                this,
                Invocation.method(#getBackupSettings, []),
              ),
            ),
          )
          as _i6.Future<_i4.BackupSettings>);

  @override
  _i6.Future<bool> validateBackupFile(String? filePath) =>
      (super.noSuchMethod(
            Invocation.method(#validateBackupFile, [filePath]),
            returnValue: _i6.Future<bool>.value(false),
            returnValueForMissingStub: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<String> getBackupDirectory() =>
      (super.noSuchMethod(
            Invocation.method(#getBackupDirectory, []),
            returnValue: _i6.Future<String>.value(
              _i7.dummyValue<String>(
                this,
                Invocation.method(#getBackupDirectory, []),
              ),
            ),
            returnValueForMissingStub: _i6.Future<String>.value(
              _i7.dummyValue<String>(
                this,
                Invocation.method(#getBackupDirectory, []),
              ),
            ),
          )
          as _i6.Future<String>);

  @override
  _i6.Future<int> getAvailableStorageSpace() =>
      (super.noSuchMethod(
            Invocation.method(#getAvailableStorageSpace, []),
            returnValue: _i6.Future<int>.value(0),
            returnValueForMissingStub: _i6.Future<int>.value(0),
          )
          as _i6.Future<int>);

  @override
  _i6.Future<void> deleteBackupFile(String? fileName) =>
      (super.noSuchMethod(
            Invocation.method(#deleteBackupFile, [fileName]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );
}
