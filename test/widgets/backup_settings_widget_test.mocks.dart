// Mocks generated by Mockito 5.4.6 from annotations
// in flutter_petchbumpen_register/test/widgets/backup_settings_widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flutter_petchbumpen_register/models/backup_info.dart' as _i6;
import 'package:flutter_petchbumpen_register/models/backup_settings.dart'
    as _i2;
import 'package:flutter_petchbumpen_register/services/backup_service.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBackupSettings_0 extends _i1.SmartFake
    implements _i2.BackupSettings {
  _FakeBackupSettings_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [BackupService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBackupService extends _i1.Mock implements _i3.BackupService {
  @override
  _i4.Stream<String> get progressStream =>
      (super.noSuchMethod(
            Invocation.getter(#progressStream),
            returnValue: _i4.Stream<String>.empty(),
            returnValueForMissingStub: _i4.Stream<String>.empty(),
          )
          as _i4.Stream<String>);

  @override
  _i4.Stream<double> get progressPercentStream =>
      (super.noSuchMethod(
            Invocation.getter(#progressPercentStream),
            returnValue: _i4.Stream<double>.empty(),
            returnValueForMissingStub: _i4.Stream<double>.empty(),
          )
          as _i4.Stream<double>);

  @override
  _i4.Future<String> exportToJson() =>
      (super.noSuchMethod(
            Invocation.method(#exportToJson, []),
            returnValue: _i4.Future<String>.value(
              _i5.dummyValue<String>(
                this,
                Invocation.method(#exportToJson, []),
              ),
            ),
            returnValueForMissingStub: _i4.Future<String>.value(
              _i5.dummyValue<String>(
                this,
                Invocation.method(#exportToJson, []),
              ),
            ),
          )
          as _i4.Future<String>);

  @override
  _i4.Future<String> exportToSql() =>
      (super.noSuchMethod(
            Invocation.method(#exportToSql, []),
            returnValue: _i4.Future<String>.value(
              _i5.dummyValue<String>(this, Invocation.method(#exportToSql, [])),
            ),
            returnValueForMissingStub: _i4.Future<String>.value(
              _i5.dummyValue<String>(this, Invocation.method(#exportToSql, [])),
            ),
          )
          as _i4.Future<String>);

  @override
  _i4.Future<void> enableAutoBackup() =>
      (super.noSuchMethod(
            Invocation.method(#enableAutoBackup, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> disableAutoBackup() =>
      (super.noSuchMethod(
            Invocation.method(#disableAutoBackup, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> performDailyBackup() =>
      (super.noSuchMethod(
            Invocation.method(#performDailyBackup, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  bool isAutoBackupEnabled() =>
      (super.noSuchMethod(
            Invocation.method(#isAutoBackupEnabled, []),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  _i4.Future<void> restoreFromFile(String? filePath) =>
      (super.noSuchMethod(
            Invocation.method(#restoreFromFile, [filePath]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> cleanOldBackups() =>
      (super.noSuchMethod(
            Invocation.method(#cleanOldBackups, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<List<_i6.BackupInfo>> getBackupFiles() =>
      (super.noSuchMethod(
            Invocation.method(#getBackupFiles, []),
            returnValue: _i4.Future<List<_i6.BackupInfo>>.value(
              <_i6.BackupInfo>[],
            ),
            returnValueForMissingStub: _i4.Future<List<_i6.BackupInfo>>.value(
              <_i6.BackupInfo>[],
            ),
          )
          as _i4.Future<List<_i6.BackupInfo>>);

  @override
  _i4.Future<void> saveBackupSettings(_i2.BackupSettings? settings) =>
      (super.noSuchMethod(
            Invocation.method(#saveBackupSettings, [settings]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<_i2.BackupSettings> getBackupSettings() =>
      (super.noSuchMethod(
            Invocation.method(#getBackupSettings, []),
            returnValue: _i4.Future<_i2.BackupSettings>.value(
              _FakeBackupSettings_0(
                this,
                Invocation.method(#getBackupSettings, []),
              ),
            ),
            returnValueForMissingStub: _i4.Future<_i2.BackupSettings>.value(
              _FakeBackupSettings_0(
                this,
                Invocation.method(#getBackupSettings, []),
              ),
            ),
          )
          as _i4.Future<_i2.BackupSettings>);

  @override
  _i4.Future<bool> validateBackupFile(String? filePath) =>
      (super.noSuchMethod(
            Invocation.method(#validateBackupFile, [filePath]),
            returnValue: _i4.Future<bool>.value(false),
            returnValueForMissingStub: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<String> getBackupDirectory() =>
      (super.noSuchMethod(
            Invocation.method(#getBackupDirectory, []),
            returnValue: _i4.Future<String>.value(
              _i5.dummyValue<String>(
                this,
                Invocation.method(#getBackupDirectory, []),
              ),
            ),
            returnValueForMissingStub: _i4.Future<String>.value(
              _i5.dummyValue<String>(
                this,
                Invocation.method(#getBackupDirectory, []),
              ),
            ),
          )
          as _i4.Future<String>);

  @override
  _i4.Future<int> getAvailableStorageSpace() =>
      (super.noSuchMethod(
            Invocation.method(#getAvailableStorageSpace, []),
            returnValue: _i4.Future<int>.value(0),
            returnValueForMissingStub: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<void> deleteBackupFile(String? fileName) =>
      (super.noSuchMethod(
            Invocation.method(#deleteBackupFile, [fileName]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );
}
